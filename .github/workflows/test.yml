name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.9"] # ${{ needs.prepare.outputs.python-version-list }}
    steps:
    - uses: actions/checkout@v4
    - name: Install OpenGL dependencies
      run: |
        sudo apt-get install -y libegl1 libpulse0 libx11-6 libxext6
        sudo apt-get install -y libxrender1 libxcb1 libfontconfig1
        sudo apt-get install -y libasound2 gstreamer1.0-libav gstreamer1.0-plugins-base
        sudo apt-get install -y gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
        sudo apt-get install -y gstreamer1.0-plugins-ugly gstreamer1.0-tools
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pillow==11.3.0
        pip install pyqt6==6.9.1
        pip install pyqt6-qt6==6.9.2
        pip install pyqt6-sip==13.10.2
        pip install pyqt6-stubs==20250824
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - name: unit test
      run: |
        python -m unittest tests/main_tab_tests.py
    - name: Send failure message
      if: failure()
      uses: an3park/telegram-action@v1
      with:
        bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
        message: 'Build failed\!'
    - name: Send success message
      if: success()
      uses: an3park/telegram-action@v1
      with:
        bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
        message: 'Build was successfull\!'
